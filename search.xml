<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDM正在退出的解决办法</title>
      <link href="/posts/cm2k6zgvr0001f8vfaoe0cjvf.html"/>
      <url>/posts/cm2k6zgvr0001f8vfaoe0cjvf.html</url>
      
        <content type="html"><![CDATA[<p>一个假冒的序列号被用来注册Internet Download Manager。IDM正在退出…解决办法</p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/df678a6df8d551352470745987230a07.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>1.找到文件 C:WindowsSystem32driversetc目录下hosts文件</p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/7b992672418aebc6ed1aa7840a8437de.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>2.设置修改文件权限：</p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/c3ad9d35fdb26ebe3035abd73a756f15.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/bcf0bf91782b75f9adde7756c4b4be73.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/078e933dcc949c2fd0a9ad1029f364af.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/eeb85412824a9722fa5342e40d44bbdf.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/ecbf8062b7c25843a360ef8127a04db4.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>然后点击确定，确定，，点击是</p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/6f3647f610bced95b5c8f1552cbb52ea.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><ol start="3"><li>用记事本打开hosts文件，并添加这一段</li></ol><blockquote><p>127.0.0.1 <a href="https://link.zhihu.com/?target=http://registeridm.com">registeridm.com</a><br>127.0.0.1 <a href="https://link.zhihu.com/?target=http://www.registeridm.com">registeridm.com</a><br>127.0.0.1 <a href="https://link.zhihu.com/?target=http://www.internetdownloadmanager.com">internetdownloadmanager.com</a></p></blockquote><p><img src="https://www.nbmao.com/wp-content/uploads/replace/9214cefa434412cbe44d81438ebe7255.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>4.再保存</p><p>5.断开网络</p><p>6.点击确定</p><p><img src="https://www.nbmao.com/wp-content/uploads/replace/28f8b1de97291aacd6405af207a31747.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>7.序列号可以使用这些，如果遇到不能用的序列号就换一个</p><blockquote><p>R2C1T-O0KQO-JAVU2-4MMYP<br>IZO7M-360FW-QY1XP-AWLPN<br>OS5HG-K90NH-SXOGT-7JYEZ<br>M2A16-47AAW-6NLYP-V1E0J<br>6KRUG-MPB4H-Z1KRG-F5MB1<br>LNOU7-WHRSY-02JUW-HRC1T<br>KYICP-AOYDJ-91VHT-L8ZVL<br>92854-7QHJY-7VR1G-F6LTP<br>OS5HG-K90NH-SXOGT-7JYEZ<br>R2C1T-O0KQO-JAVU2-4MMYP<br>M2A16-47AAW-6NLYP-V1E0J<br>IZO7M-360FW-QY1XP-AWLPN<br>46YFS-S9G7H-QZFWI-QQBQB<br>TUTR2-I2NHO-GQBC6-ZECWH<br>TUTR2-I2NHO-GQBC6-ZECWH</p></blockquote><p><img src="https://www.nbmao.com/wp-content/uploads/replace/3e8edd21912dd9227f6263e592e8b172.png" alt="一个假冒的序列号被用来注册Internet Download Manager,IDM正在退出的解决办法"></p><p>8.这样便可以正常使用啦。</p>]]></content>
      
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uptime</title>
      <link href="/posts/cm2k6zgwn000yf8vfhxnwegr8.html"/>
      <url>/posts/cm2k6zgwn000yf8vfhxnwegr8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用worker转发跳转替换路径，现在应该差不多完美了<br>感谢佬：<a href="https://linux.do/t/topic/5196">【Cloudflare教程系列】利用Worker反代github 60</a> 提供的思路</p></blockquote><p><a href="https://github.com/louislam/uptime-kuma">uptime-kuma 151</a>是一个优雅网站在线状态监控面板工具，我认为它也可以是你的域名集合站，避免在新设备上访问时还需要麻烦的寻找收藏的域名。</p><p>之前有佬分享了docker部署的教程：<a href="https://linux.do/t/topic/3600">【好玩的 Docker 项目】搭建一个高颜值的网站和服务在线状态跟踪工具——“uptime-kuma” 165</a></p><p><strong>但是我觉得不稳，毕竟所有服务都部署在自己的服务器上，面板都挂了还监控个锤子啊（</strong></p><p>然后我就想着用Vercel railway worker之类的服务部署，但是要么限制额度要么没数据库，最后是选择了huggingface space构筑，感谢大佬分享的教程：<a href="https://www.cnblogs.com/arena/p/17693667.html">自建免费的网站监控服务-在huggingface上部署uptime kuma - luckzack - 博客园 147</a></p><hr><h3 id="部署面板"><a href="#部署面板" class="headerlink" title="部署面板"></a>部署面板</h3><p>默认你有hugging face账号，下面是我步骤：</p><ul><li><p>创建一个新空间：<a href="https://huggingface.co/new-space">Create a new Space 92</a></p></li><li><ul><li>Space name： uptime-kuma</li></ul></li><li><ul><li>License： MIT</li></ul></li><li><ul><li>Select the Space SDK： docker （Blank）</li></ul></li><li><ul><li>Space hardware： free</li></ul></li><li><p>编辑Dockerfile ：</p><p><img src="https://linux.do/uploads/default/optimized/3X/d/4/d4dedcadb66037e7e02146a0992ca7a6ef152afe_2_554x500.png" alt="image"></p><p>image1100×991 79.1 KB</p></li><li><p>输入以下内容：</p></li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine AS builder</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk add --no-cache nodejs npm git</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install npm -g</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> adduser -D app</span></span><br><span class="line"><span class="keyword">USER</span> app</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /home/app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> https://github.com/louislam/uptime-kuma.git</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /home/app/uptime-kuma</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm run setup</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3001</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;node&quot;</span>, <span class="string">&quot;server/server.js&quot;</span>]</span></span><br></pre></td></tr></table></figure><ul><li><p>提交修改：</p><p><img src="https://linux.do/uploads/default/optimized/3X/b/c/bc9884e1ee831421e1963c64bcb6b21500cb54d2_2_576x500.png" alt="image"></p><p>image1129×980 44.3 KB</p></li><li><p>不需要等待完成，去files里编辑README文件：</p><p><img src="https://linux.do/uploads/default/optimized/3X/0/7/07c52021bc59c271721c5084133980ab6a99ff7b_2_690x390.png" alt="image"></p><p>image1098×622 34.7 KB</p><p><img src="https://linux.do/uploads/default/optimized/3X/7/5/75f9812ce172ea9802f0b0de2e43411ffc4e92fe_2_690x218.png" alt="image"></p><p>image1063×336 31.1 KB</p><p><img src="https://linux.do/uploads/default/optimized/3X/f/0/f0f4a221a3d5f4b245ae9429bbdfba9276443df2_2_690x305.png" alt="image"></p><p>image1098×486 33.2 KB</p></li><li><p>增加一行 ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app_port: 3001</span><br></pre></td></tr></table></figure><p>，然后提交Commit</p><p><img src="https://linux.do/uploads/default/optimized/3X/c/8/c8d8666c14af78ecc18214d7c87111ca408ddfaa_2_690x440.png" alt="image"></p><p>image1088×694 33.1 KB</p></li><li><p>验证成功OR失败<br>观察你的页面上有没有以下图标之一：</p></li></ul><blockquote><p><a href="https://user-images.githubusercontent.com/21104213/261018464-26365d8a-7af3-4d32-9bfd-0211b6da9a7d.png"><img src="https://linux.do/uploads/default/original/3X/4/2/42b04bc8d81c3717e78997e2310bc45a479db805.png" alt="image"> 6</a>——<strong>祝贺你，成功了！</strong><br><a href="https://user-images.githubusercontent.com/21104213/261018410-715184de-e460-4841-87df-99b400316816.png"><img src="https://linux.do/uploads/default/original/3X/7/e/7e59a132364efb673a78a6574ca56e2c6e2b9676.png" alt="image"></a>——<strong>等一会，稍安勿躁，还没部署完！不行的话，看看你的</strong> <code>readme.md</code>填写对了吗？<br><strong>No application file</strong>——<strong>dockerfile忘记保存了吧？</strong><br><strong>Build error</strong>或 <strong>Runtime error</strong>——<strong>出错了，检查dockerfile是否多了回车！</strong></p></blockquote><ul><li><p>build完成后你就能获取到访问链接，点击Embed this Space<br><img src="https://linux.do/uploads/default/original/3X/d/5/d5307b2e7eeaed6116ebb6a557c4fd73b54615a3.png" alt="image"></p></li><li><p>记得第一时间访问去注册管理员账号</p></li><li><p>监控面板中创建一个状态页面，后缀&#x2F;status&#x2F;web，于是就得了一个域名</p><p><a href="https://xxx.hf.space/status/web">https://xxx.hf.space/status/web</a> 27</p><p><img src="https://linux.do/uploads/default/optimized/3X/b/4/b4ed6f82f2822a430dd47fdee9096ea70c38e5f1_2_690x347.png" alt="image"></p><p>image1161×585 18.4 KB</p></li></ul><hr><h3 id="域名跳转"><a href="#域名跳转" class="headerlink" title="域名跳转"></a>域名跳转</h3><p>然后我觉得这个域名难看又难记，想用自定义域名访问，可惜hugging face没有开通这个业务，前年就有人提了。<br>参考佬的思路，用worker转发，并且我把路径也做了替换，如果想直接指向面板根路径的话，就将可选区域去除，或者根据你的需求调整路径：</p><ul><li>进入cloudflare 的 <a href="https://dash.cloudflare.com/workers-and-pages">Workers 和 Pages 36</a></li><li>创建应用程序，编辑代码，然后 保存并部署：</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">export <span class="literal">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">async</span> <span class="title">fetch</span>(<span class="params">request, env</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> _url = <span class="keyword">new</span> URL(request.url);</span><br><span class="line">    <span class="keyword">const</span> hostname = _url.hostname;</span><br><span class="line">    _url.hostname = <span class="string">&quot;xxx.hf.space&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> req = <span class="keyword">new</span> Request(_url, request);</span><br><span class="line">    req.headers.<span class="keyword">set</span>(<span class="string">&#x27;origin&#x27;</span>, <span class="string">&#x27;https://xxx.hf.space&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(req);</span><br><span class="line">    <span class="keyword">let</span> newres = <span class="keyword">new</span> Response(res.body, res);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> location = newres.headers.<span class="keyword">get</span>(<span class="string">&#x27;location&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (location !== <span class="literal">null</span> &amp;&amp; location !== <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 可选 - &gt;</span></span><br><span class="line">      <span class="comment">// 去除原始路径中的 /dashboard</span></span><br><span class="line">      location = location.replace(<span class="string">&#x27;/dashboard&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      <span class="comment">// 添加 /status/web 路径</span></span><br><span class="line">      location = location + <span class="string">&#x27;/status/web&#x27;</span>;</span><br><span class="line">      <span class="comment">//  &lt;- 可选</span></span><br><span class="line"></span><br><span class="line">      location = location.replace(<span class="string">&#x27;://xxx.hf.space&#x27;</span>, <span class="string">&#x27;://&#x27;</span>+hostname);</span><br><span class="line">      newres.headers.<span class="keyword">set</span>(<span class="string">&#x27;location&#x27;</span>, location);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newres;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>回到cloudflare的网站，选择你的域名，增加一个DNS解析，我是用子域名，所以是A记录，IP就从优选里挑一个：</p><p><a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a> 68</p><p><img src="https://linux.do/uploads/default/original/3X/4/d/4d59732d33878ef6ab6142b2f2ba4ab917292076.png" alt="image"></p><p>image1101×44 1.88 KB</p></li><li><p>然后添加一个 Workers 路由， 点击保存<br><img src="https://linux.do/uploads/default/original/3X/c/f/cf4e95e22fe20bdc5047f4185caef8c4c86f4619.png" alt="image"></p></li><li><p>去浏览器试试</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm图床使用</title>
      <link href="/posts/2669.html"/>
      <url>/posts/2669.html</url>
      
        <content type="html"><![CDATA[<h1 id="npm图床使用"><a href="#npm图床使用" class="headerlink" title="npm图床使用"></a>npm图床使用</h1><p>安知鱼2022-08-062023-08-01</p><ol><li><p>首先需要注册一个 npm 的账号。访问<a href="https://www.npmjs.com/signup/">npm 注册页面</a><br><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/01.png" alt="img"></p></li><li><p>完成邮箱验证，注册完成后进入账号管理界面:头像-&gt;Account，拉倒最上方，你会看到<code>You have not verified your email address</code>字样的提示，点击以后按提示步骤验证你的邮箱。<br><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/02.png" alt="img"></p></li><li><p>找到我们之前创建的图床仓库，在本地合适的位置把它<code>clone</code>下来。找个空文件夹打开终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:[username]/[AssetsRepo].git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[username]/[AssetsRepo].git</span><br></pre></td></tr></table></figure></li><li><p>在 clone 下来的[AssetsRepo]文件夹内打开终端，输入以下指令切换回原生源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure></li><li><p>添加本地 npm 用户设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure></li><li><p>运行 npm 初始化指令，把整个图床仓库打包，按照指示进行配置，注意需要事先确认你的包名没有和别人已发布的包重复，可以在 npm 官网搜索相应包名，搜不到就说明还没被占用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/03.png" alt="img"><br>最后会输出一段 package.json，请求确认，输入 yes 即可。</p></li><li><p>然后输入发布指令，我们就可以把包发布到 npm 上了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure></li><li><p>jsdelivr+npm 的图片引用和 jsdelivr+github 很相似，例如我在<code>[AssetsRepo]</code>仓库里存放的<code>/img/index.png</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jsDelivr+github链接</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/[GithubUserName]/[AssetsRepo]/img/index.png</span><br><span class="line"><span class="comment"># jsDelivr+npm链接</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/[NpmPackageName]/img/index.png</span><br></pre></td></tr></table></figure><p>可以看到 Npm 只需要提供包名即可。这也是一开始要求包名不重复的原因之一</p><p>jsDelivr+Npm 依然有 100MB 的包大小限制，但是 NPM 有丰富的国内节点。可以挑选一个使用。个人推荐知乎的。没有大小限制，而且也很稳定。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">【jsd出品，网宿国内节点】</span><br><span class="line">https://cdn.jsdelivr.net/npm/:package@:version/:file</span><br><span class="line">【unpkg 自建】</span><br><span class="line">https://cdn.cbd.int/:package@:version/:file</span><br></pre></td></tr></table></figure><p>当然你也可以利用<a href="https://unpkg.com/">unpkg</a>自建。(UNPKG 是一个内容源自 npm 的全球快速 CDN。它部署在 cloudflare 上，在大陆地区访问到的是香港节点。所以速度也不错。)</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://unpkg.com/:package@:version/:file</span><br></pre></td></tr></table></figure></li><li><p>如果每次都要在本地进行<code>npm publish</code>的话，npm 的提交是整个包一起上传的，不存在增量更新，耗时不说，而且还往往需要架梯子才能正常上传。所以我们可以把它交给 github action 来完成。</p><ul><li><p>在<a href="https://www.npmjs.com/">npm 官网</a>-&gt;头像-&gt;Access Tokens-&gt;Generate New Token,勾选 Automation 选项，<code>Token</code>只会显示这一次，之后如果忘记了就只能重新生成重新配置了。<br><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/04.png" alt="img"><br><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/05.png" alt="img"></p></li><li><p>在 github 的[AssetsRepo]仓库设置项里添加一个名为<code>NPM_TOKEN</code>的<code>secrets</code>，把获取的 Npm 的 Access token 输入进去。<br><img src="https://cdn.cbd.int/anzhiyu-static@1.0.0/img/02/06.png" alt="img"></p></li><li><p>在本地的<code>[AssetsRepo]</code>文件夹下新建<code>[AssetsRepo]/.github/workflows/autopublish.yml</code>,</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">Package</span></span><br><span class="line"><span class="comment"># 监测图床分支，2020年10月后github新建仓库默认分支改为main，记得更改</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish-npm:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;secrets.npm_token&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>在本地的<code>[AssetsRepo]</code>文件夹下打开终端，运行以下指令，上传新增内容至 github，即可触发部署。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;npm publish&quot;</span></span><br><span class="line"><span class="comment"># 更新package版本号</span></span><br><span class="line">npm version patch</span><br><span class="line"><span class="comment"># 推送至github触发action</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>此处的四行指令顺序严格。<br>每次更新 npm 图床都需要先修改<code>[AssetsRepo]\package.json</code>里的<code>version</code>,也就是版本号。<br>而<code>npm version patch</code>即为更新 package.json 里的版本号的指令，效果是末尾版本号+1，例如<code>0.0.1=&gt;0.0.2</code>、<code>1.1.3=&gt;1.1.4</code>。免去了打开<code>package.json</code>再修改版本号的麻烦。（大版本更新还是需要手动改的）<br>更新 npm 图床务必要记得更新<code>package.json</code>里的版本号！</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🌟 Follow：新一代RSS订阅工具，让阅读更有趣！</title>
      <link href="/posts/2670.html"/>
      <url>/posts/2670.html</url>
      
        <content type="html"><![CDATA[<h1 id="🌟-Follow：新一代RSS订阅工具，让阅读更有趣！"><a href="#🌟-Follow：新一代RSS订阅工具，让阅读更有趣！" class="headerlink" title="🌟 Follow：新一代RSS订阅工具，让阅读更有趣！"></a>🌟 Follow：新一代RSS订阅工具，让阅读更有趣！</h1><p>2024年10月13日 226点热度 0人点赞 5条评论</p><p><img src="https://imgs.huluohu.com/2024/09/30/17277070770112.jpg" alt="Follow"></p><blockquote><p>嘿，各位信息达人们！👋 今天我要介绍一个超级棒的工具——Follow！如果你和我一样，每天都在努力不错过任何重要内容，那么这个工具绝对能让你眼前一亮！让我们一起来探索 Follow 的神奇世界吧！</p></blockquote><h2 id="🎭-什么是-Follow？"><a href="#🎭-什么是-Follow？" class="headerlink" title="🎭 什么是 Follow？"></a>🎭 什么是 Follow？</h2><p>Follow 是一个强大的个人信息聚合平台，它不仅仅是一个简单的 RSS 阅读器，而是一个全方位的信息管理助手。想象一下，你所有关注的博客、网站、社交媒体都整整齐齐地排列在一个地方，是不是感觉生活瞬间变得井井有条了呢？😊</p><h2 id="🚀-Follow-能做什么？"><a href="#🚀-Follow-能做什么？" class="headerlink" title="🚀 Follow 能做什么？"></a>🚀 Follow 能做什么？</h2><h3 id="1-订阅任何内容-📰"><a href="#1-订阅任何内容-📰" class="headerlink" title="1. 订阅任何内容 📰"></a>1. 订阅任何内容 📰</h3><p><img src="https://imgs.huluohu.com/2024/09/30/17277092692452.jpg" alt="Follow"></p><p>Follow 的订阅能力简直是无所不能！它支持：</p><ul><li>RSS&#x2F;Atom feeds</li><li>任何网页内容（即使没有 RSS！）</li><li>Twitter 时间线和搜索结果</li><li>YouTube 频道和播放列表</li><li>Bilibili 用户动态、收藏夹和订阅</li><li>邮件通讯</li><li>…还有更多！</li></ul><h3 id="2-智能过滤和推荐-🧠"><a href="#2-智能过滤和推荐-🧠" class="headerlink" title="2. 智能过滤和推荐 🧠"></a>2. 智能过滤和推荐 🧠</h3><p><img src="https://imgs.huluohu.com/2024/09/30/17277093004641.jpg" alt="Follow"></p><p>信息太多？别担心！Follow 采用先进的 AI 算法，帮你：</p><ul><li>自动过滤重复内容</li><li>智能推荐感兴趣的文章</li><li>根据你的阅读习惯调整内容展示</li></ul><p>再也不用担心错过重要信息啦！</p><h3 id="3-多平台同步-📱💻"><a href="#3-多平台同步-📱💻" class="headerlink" title="3. 多平台同步 📱💻"></a>3. 多平台同步 📱💻</h3><p>Follow 支持多种使用方式：</p><ul><li>网页版：随时随地访问，网址为：<code>app.follow.is</code></li><li>桌面客户端：Windows、macOS 和 Linux 全覆盖</li><li>移动 App：iOS 和 Android 双平台支持也在开发中</li></ul><p>无论你在哪里，你的阅读进度都能完美同步！</p><h3 id="4-自定义阅读体验-🎨"><a href="#4-自定义阅读体验-🎨" class="headerlink" title="4. 自定义阅读体验 🎨"></a>4. 自定义阅读体验 🎨</h3><p><img src="https://imgs.huluohu.com/2024/09/30/17277093202184.jpg" alt="Follow"></p><p>Follow 让你的阅读体验完全个性化：</p><ul><li>支持明暗双主题</li><li>自定义字体大小和样式</li><li>文章布局调整</li><li>支持稍后阅读和收藏功能</li></ul><p>舒适度 Max！</p><h3 id="5-强大的搜索和过滤-🔍"><a href="#5-强大的搜索和过滤-🔍" class="headerlink" title="5. 强大的搜索和过滤 🔍"></a>5. 强大的搜索和过滤 🔍</h3><ul><li>全文搜索：快速找到需要的内容</li><li>高级过滤：设置关键词，精准筛选文章</li><li>标签管理：对订阅源进行分类，轻松管理</li></ul><h3 id="6-导入导出功能-📤📥"><a href="#6-导入导出功能-📤📥" class="headerlink" title="6. 导入导出功能 📤📥"></a>6. 导入导出功能 📤📥</h3><ul><li>支持 OPML 格式导入导出</li><li>轻松迁移你的订阅列表</li></ul><h2 id="🛠️-进阶使用技巧"><a href="#🛠️-进阶使用技巧" class="headerlink" title="🛠️ 进阶使用技巧"></a>🛠️ 进阶使用技巧</h2><ol><li><strong>自定义订阅规则</strong>：使用 XPath 或 CSS 选择器来定制网页内容抓取。</li><li><strong>API 集成</strong>：Follow 提供了丰富的 API，可以轻松集成到你的其他工具中。</li><li><strong>插件系统</strong>：通过插件扩展 Follow 的功能，满足特定需求。</li><li><strong>快捷键支持</strong>：为常用操作设置快捷键，提高阅读效率。</li></ol><p><img src="https://imgs.huluohu.com/2024/09/30/17277094171937.jpg" alt="Follow"></p><h2 id="🌈-结语"><a href="#🌈-结语" class="headerlink" title="🌈 结语"></a>🌈 结语</h2><p>在这个信息爆炸的时代，Follow 就像是我们在信息海洋中的一盏明灯，帮助我们准确找到最有价值的内容。无论你是科技爱好者、新闻追踪者，还是只是想更好地管理你的阅读列表，Follow 都能成为你的得力助手。</p><p>最后，可以在笔者公众号私信【<strong>follow</strong>】即可快速获取客户端下载链接，打开链接后根据自己的平台下载即可。<br><img src="https://imgs.huluohu.com/2024/10/13/17287518762637.jpg" alt="Follow"></p>]]></content>
      
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> follow </tag>
            
            <tag> 软件资源 </tag>
            
            <tag> tag </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
